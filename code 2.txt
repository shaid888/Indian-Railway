#include<stdio.h>
#include<stdlib.h>
#include<pthread.h>
#include<unistd.h>
#include<sys/types.h>
#include<sys/wait.h>
#include<semaphore.h> 
int allPassangersSeated =0; 
int trainArrived =0; 
int leftover =0;
struct station
{	
	int noOfSeatsLeft;	
	int waitingPassangers;
	int seatedPassangers;
	sem_t lock;	
}a;
void station_init()
{
	printf("Enter the train's Capacity: ");
	scanf("%d",&a.noOfSeatsLeft);
	if(a.noOfSeatsLeft==0)
	{
		printf("Train is already FULL!!!\n");
		exit(0);
	}
	if(a.noOfSeatsLeft<0)
	{
		printf("Seats cannot be negative!!\n");
		exit(0);
	}	
	printf("Enter the No. of Passangers that are willing to board at Station: ");
	scanf("%d",&a.waitingPassangers);
	if(a.waitingPassangers<0)
	{
		printf("Passangers cannot be negative!!\n");
		exit(0);
	}
	if(a.waitingPassangers>a.noOfSeatsLeft)
	{
		leftover = a.waitingPassangers-a.noOfSeatsLeft;
		printf("%d passangers will be left at Station.\n",leftover);
		a.waitingPassangers=a.noOfSeatsLeft;				
	}	
}
void* station_load_train(void *args)
{
	printf("Train has arrived at the station and has opened it doors!!!\n\n ");		
	struct station *p = (struct station *)args;
	trainArrived = 1;
	sleep(2*p->waitingPassangers);
	if(allPassangersSeated ==1 || p->noOfSeatsLeft==0)
	{
		printf("\nSeats Left: %d\n",p->noOfSeatsLeft);
	}
}
int seatingcounter = 0;
void station_on_board(struct station *st)
{
	seatingcounter++;
	sem_wait(&a.lock);
	allPassangersSeated =0;
	st->noOfSeatsLeft--;
	printf("%d Passangers have seated Successfully\n",seatingcounter);
	allPassangersSeated =1;
	sem_post(&a.lock);
}
void* station_wait_for_train(void *args)
{		
	struct station *p = (struct station *)args;
	if((trainArrived == 1) && (a.noOfSeatsLeft>0))
	{
		station_on_board(p);	
	}
}
int main()
{	
 //Pass;
	return 0;
}