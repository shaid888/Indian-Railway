#include<pthread.h>
#include <stdio.h>
#include<stdlib.h>
struct station {
	struct condition *confirm_arrival, *confirm_passengers_seated;
	int passengers_waiting;
	int seats_empty;
	int passengers_boarding;
	pthread_mutex_s k;
};
void station_wait_for_train(struct station *station)
{
	pthread_mutex_lock(station->k);
	station.passengers_waiting = (station.passengers_waiting + 1);
	while (station.seats_empty==station.passengers_boarding)
	{
		station.passengers_boarding = (station.passengers_boardiong + 1);
		station.passengers_waiting = (station.passengers_waiting - 1);
		pthread_mutex_unlock(station->k);
	}
}
void station_on_board(struct station *station)
{
	pthread_mutex_lock(station->k);
	station.passengers_boarding = (station.passengers_boardiong - 1);
	station.seats_empty = (station.seats_empty - 1);
	if ((station.passengers_boardiong  == 0) || (station.seats_empty == 0)) 
	pthread_mutex_unlock(station->k);
}
int main()
{
printf("Pass\\n");
}